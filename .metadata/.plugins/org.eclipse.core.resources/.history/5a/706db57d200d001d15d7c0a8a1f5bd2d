
public abstract class  Conta implements IConta{
// muitas vezes posso tornar uma classe abstrata, pois esta não pode ser instanciada, pois não faz sentido dar um new em conta sendo que o banco trabalha apenas com conta poupança e corrnte	
//assim só os filhos podem ser instanciados
//Polimorfismo é a capacidade de um objeto poder ser referenciado de várias formas ex:
//Conta conta = new ContaCorrente ou,
//Conta conta = new ContaPoupanca
	
	private static final int AGENCIA_PADRAO = 1;
	private static int SEQUENCIAL = 1;
	
	protected int agencia;
	protected int numero;
	protected double saldo;
	
	public Conta () {
		this.agencia = Conta.AGENCIA_PADRAO; 
		this.numero = SEQUENCIAL++;
		//a proxima conta será 2
	
	}
     
	

	@Override
	public void sacar (double valor) {
		
		this.saldo = saldo-valor;
		//saldo -= valor;
		
	}

	@Override
	public void depositar(double valor) {
		saldo += valor;
		
		
	}

	@Override
	public void transferir(double valor, Conta contaDestino) {
	
		this.sacar(valor);
		contaDestino.depositar(valor);
	}
	
	public int getAgencia() {
		return agencia;
	}

	public int getNumero() {
		return numero;
	}

	public double getSaldo() {
		return saldo;
	}
	
	protected void imprimirInfosComuns() {
		System.out.println(String.format("Agencia: %d", this.agencia));
		System.out.println(String.format("Numero: %d", this.numero));
		System.out.println(String.format("Saldo: %.2f", this.saldo));
	}

}
